{"tagline":"The code we use to render README.your_favorite_markup","note":"Don't delete this file! It's used internally to help with page regeneration.","body":"GitHub Markup\r\n=============\r\n\r\nWe use this library on GitHub when rendering your README or any other\r\nrich text file.\r\n\r\nMarkups\r\n-------\r\n\r\nThe following markups are supported.  The dependencies listed are required if\r\nyou wish to run the library.\r\n\r\n* [.markdown](http://daringfireball.net/projects/markdown/) -- `gem install rdiscount`\r\n* [.textile](http://www.textism.com/tools/textile/) -- `gem install RedCloth`\r\n* [.rdoc](http://rdoc.sourceforge.net/)\r\n* [.org](http://orgmode.org/) -- `gem install org-ruby`\r\n* [.creole](http://wikicreole.org/) -- `gem install creole`\r\n* [.rst](http://docutils.sourceforge.net/rst.html) -- `easy_install docutils`\r\n* [.asciidoc](http://www.methods.co.nz/asciidoc/) -- `brew install asciidoc`\r\n* [.pod](http://search.cpan.org/dist/perl/pod/perlpod.pod) -- `Pod::Simple::HTML`\r\n  comes with Perl >= 5.10. Lower versions should install Pod::Simple from CPAN.\r\n* .1 - Requires [`groff`](http://www.gnu.org/software/groff/)\r\n\r\n\r\nContributing\r\n------------\r\n\r\nWant to contribute? Great! There are two ways to add markups.\r\n\r\n\r\n### Commands\r\n\r\nIf your markup is in a language other than Ruby, drop a translator\r\nscript in `lib/github/commands` which accepts input on STDIN and\r\nreturns HTML on STDOUT. See [rest2html][r2h] for an example.\r\n\r\nOnce your script is in place, edit `lib/github/markups.rb` and tell\r\nGitHub Markup about it. Again we look to [rest2html][r2hc] for\r\nguidance:\r\n\r\n    command(:rest2html, /re?st(.txt)?/)\r\n\r\nHere we're telling GitHub Markup of the existence of a `rest2html`\r\ncommand which should be used for any file ending in `rest`,\r\n`rst`, `rest.txt` or `rst.txt`. Any regular expression will do.\r\n\r\nFinally add your tests. Create a `README.extension` in `test/markups`\r\nalong with a `README.extension.html`. As you may imagine, the\r\n`README.extension` should be your known input and the\r\n`README.extension.html` should be the desired output.\r\n\r\nNow run the tests: `rake`\r\n\r\nIf nothing complains, congratulations!\r\n\r\n\r\n### Classes\r\n\r\nIf your markup can be translated using a Ruby library, that's\r\ngreat. Check out Check `lib/github/markups.rb` for some\r\nexamples. Let's look at Markdown:\r\n\r\n    markup(:markdown, /md|mkdn?|markdown/) do |content|\r\n      Markdown.new(content).to_html\r\n    end\r\n\r\nWe give the `markup` method three bits of information: the name of the\r\nfile to `require`, a regular expression for extensions to match, and a\r\nblock to run with unformatted markup which should return HTML.\r\n\r\nIf you need to monkeypatch a RubyGem or something, check out the\r\nincluded RDoc example.\r\n\r\nTests should be added in the same manner as described under the\r\n`Commands` section.\r\n\r\n\r\nInstallation\r\n-----------\r\n\r\n    gem install github-markup\r\n\r\n\r\nUsage\r\n-----\r\n\r\n    require 'github/markup'\r\n    GitHub::Markup.render('README.markdown', \"* One\\n* Two\")\r\n\r\nOr, more realistically:\r\n\r\n    require 'github/markup'\r\n    GitHub::Markup.render(file, File.read(file))\r\n\r\n\r\nTesting\r\n-------\r\n\r\nTo run the tests:\r\n\r\n    $ rake\r\n\r\nTo add tests see the `Commands` section earlier in this\r\nREADME.\r\n\r\n\r\nContributing\r\n------------\r\n\r\n1. Fork it.\r\n2. Create a branch (`git checkout -b my_markup`)\r\n3. Commit your changes (`git commit -am \"Added Snarkdown\"`)\r\n4. Push to the branch (`git push origin my_markup`)\r\n5. Create an [Issue][1] with a link to your branch\r\n6. Enjoy a refreshing Diet Coke and wait\r\n\r\n\r\n[r2h]: http://github.com/github/markup/tree/master/lib/github/commands/rest2html\r\n[r2hc]: http://github.com/github/markup/tree/master/lib/github/markups.rb#L13\r\n[1]: http://github.com/github/markup/issues\r\n","google":"","name":"Markup"}